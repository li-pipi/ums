/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-23 04:19:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_005flogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title>Insert title here</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/bootstrap.min.css\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/font-awesome.min.css\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/AdminLTE.min.css\">\r\n");
      out.write("\t\t<script type=\"application/javascript\" src=\"../static/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"application/javascript\" src=\"../static/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"application/javascript\">\r\n");
      out.write("\t\t\t$(function () {\r\n");
      out.write("\t\t\t\t//获得此时地址栏的URL地址\r\n");
      out.write("\t\t\t\tvar url = location.href;\r\n");
      out.write("\t\t\t\tvar flag = url.contains(\"flag\");\r\n");
      out.write("\t\t\t\tif(flagIndex > -1){\r\n");
      out.write("\t\t\t\t\t//此时的URL时登录失败之后重定向而来的\r\n");
      out.write("\t\t\t\t\t//获得此时的失败的标记值，也就是flag的值\r\n");
      out.write("\t\t\t\t\tvar errorCode = url.substring(url.lastIndexOf(\"=\") + 1, url.length);\r\n");
      out.write("\t\t\t\t\tif(errorCode == 0){\r\n");
      out.write("\t\t\t\t\t\t//用户未提交手机号码或者是密码\r\n");
      out.write("\t\t\t\t\t\t$(\"#error\").html(\"请填写有效的手机号码和登陆密码\");\r\n");
      out.write("\t\t\t\t\t}else if (errorCode == 1){\r\n");
      out.write("\t\t\t\t\t\t$(\"#error\").html(\"手机号码或者是密码错误！如仍无法登录，请联系管理员！\")\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#error\").html(\"\")\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body class=\"hold-transition login-page\">\r\n");
      out.write("\t\t\t<div class=\"login-box\">\r\n");
      out.write("\t\t  \t<div class=\"login-logo\">\r\n");
      out.write("\t\t    \t<a href=\"#\"><b>皮皮信息发布系统</b></a>\r\n");
      out.write("\t\t  \t</div>\r\n");
      out.write("\t\t\t<div class=\"login-box-body\">\r\n");
      out.write("\t\t\t\t<p class=\"login-box-msg\">Sign in to start your session</p>\r\n");
      out.write("\t\t    \t<form action=\"login\" method=\"post\">\r\n");
      out.write("\t\t      \t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("\t\t        \t\t<input type=\"text\" name=\"cellphone\" class=\"form-control\" placeholder=\"请输入您的手机号码\">\r\n");
      out.write("\t\t        \t\t<span class=\"glyphicon glyphicon-phone form-control-feedback\"></span>\r\n");
      out.write("\t\t      \t\t</div>\r\n");
      out.write("\t\t      \t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("\t\t        \t\t<input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"请输入您的登录密码\">\r\n");
      out.write("\t\t        \t\t<span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("\t\t      \t\t</div>\r\n");
      out.write("\t\t      \t\t<div class=\"row\">\r\n");
      out.write("\t\t        \t\t<div class=\"col-xs-8\">\r\n");
      out.write("\t\t          \t\t\t<div class=\"checkbox icheck\"></div>\r\n");
      out.write("\t\t        \t\t</div>\r\n");
      out.write("\t\t        \t\t<div class=\"col-xs-4\">\r\n");
      out.write("\t\t          \t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block btn-flat\">登录</button>\r\n");
      out.write("\t\t        \t\t</div>\r\n");
      out.write("\t\t      \t\t</div>\r\n");
      out.write("\t\t    \t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    \t<div class=\"social-auth-links text-center\">\r\n");
      out.write("\t\t      \t\t<p>\r\n");
      out.write("\t\t      \t\t\t<span id=\"error\" style=\"color: red;\"></span>\r\n");
      out.write("\t\t      \t\t\t<span>系统管理员联系电话：19991327983</span>\r\n");
      out.write("\t\t      \t\t</p>\r\n");
      out.write("\t\t    \t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    \t<a href=\"#\">忘记密码...</a><br>\r\n");
      out.write("\t\t    \t<a href=\"user_register_form.jsp\" class=\"text-center\">没有账号？注册新用户...</a>\r\n");
      out.write("\t\t  \t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
