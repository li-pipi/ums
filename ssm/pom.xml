<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                                http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cn.ekgc.framework</groupId>
  <artifactId>ssm</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring.version>5.2.8.RELEASE</spring.version>
    <mysql-connector-java.version>8.0.21</mysql-connector-java.version>
    <mybatis.version>3.5.5</mybatis.version>
    <mybatis-spring.version>2.0.5</mybatis-spring.version>
    <druid.version>1.1.23</druid.version>
  </properties>

  <dependencies>
    <!-- 配置 Spring Web MVC 项目依赖关系 [BEGIN] -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- 配置 Spring Web MVC 项目依赖关系 [END] -->

    <!-- 配置 Spring JDBC 项目依赖关系 [BEGIN] -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- 配置 Spring JDBC 项目依赖关系 [END] -->

    <!-- 配置 MySQL Connector Java 项目依赖关系 [BEGIN] -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector-java.version}</version>
    </dependency>
    <!-- 配置 MySQL Connector Java 项目依赖关系 [END] -->

    <!-- 配置 MyBatis 项目依赖关系 [BEGIN] -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <!-- 配置 MyBatis 项目依赖关系 [END] -->

    <!-- 配置 MyBatis 和 Spring 结合的依赖关系 [BEGIN] -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>
    <!-- 配置 MyBatis 和 Spring 结合的依赖关系 [END] -->

    <!-- 配置 Druid 数据库连接池依赖关系 [BEGIN] -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>
    <!-- 配置 Druid 数据库连接池依赖关系 [END] -->

    <!-- 配置返回 JSON 数据的依赖关系 [BEGIN] -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.11.2</version>
    </dependency>
    <!-- 配置返回 JSON 数据的依赖关系 [END] -->

    <!-- 配置 Servlet、JSP 和 JSTL 依赖关系 [BEGIN] -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <!--
		  Maven 在引入 Jar 文件时，会设定该 Jar 文件所使用的范围：
			  test（仅在编译和测试时使用，当项目打包发布时不再使用）、
			  provided（仅在编译时使用，打包发布时不再使用）、
			  compile（编译、测试、执行、打包都存在，默认选项）、
			  run（运行时提供）
	  -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <version>2.3.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- 配置 Servlet、JSP 和 JSTL 依赖关系 [END] -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>ssm</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
